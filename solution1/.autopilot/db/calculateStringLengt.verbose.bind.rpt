

================================================================
== Vivado HLS Report for 'calculateStringLengt'
================================================================
* Date:           Wed Nov 29 19:46:02 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        sha256
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|        10|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %str, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 5, [5 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 12 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%str_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %str_offset)" [sha256/main.c:113]   --->   Operation 13 'read' 'str_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln115 = sext i32 %str_offset_read to i64" [sha256/main.c:115]   --->   Operation 14 'sext' 'sext_ln115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.76ns)   --->   "br label %1" [sha256/main.c:115]   --->   Operation 15 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 3.52>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%length_0 = phi i64 [ 0, %0 ], [ %length, %1 ]"   --->   Operation 16 'phi' 'length_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (3.52ns)   --->   "%add_ln115 = add i64 %length_0, %sext_ln115" [sha256/main.c:115]   --->   Operation 17 'add' 'add_ln115' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%str_addr = getelementptr i8* %str, i64 %add_ln115" [sha256/main.c:115]   --->   Operation 18 'getelementptr' 'str_addr' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 19 [7/7] (8.75ns)   --->   "%str_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %str_addr, i32 1)" [sha256/main.c:115]   --->   Operation 19 'readreq' 'str_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 20 [6/7] (8.75ns)   --->   "%str_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %str_addr, i32 1)" [sha256/main.c:115]   --->   Operation 20 'readreq' 'str_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 21 [5/7] (8.75ns)   --->   "%str_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %str_addr, i32 1)" [sha256/main.c:115]   --->   Operation 21 'readreq' 'str_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 22 [4/7] (8.75ns)   --->   "%str_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %str_addr, i32 1)" [sha256/main.c:115]   --->   Operation 22 'readreq' 'str_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 23 [3/7] (8.75ns)   --->   "%str_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %str_addr, i32 1)" [sha256/main.c:115]   --->   Operation 23 'readreq' 'str_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 24 [2/7] (8.75ns)   --->   "%str_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %str_addr, i32 1)" [sha256/main.c:115]   --->   Operation 24 'readreq' 'str_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 25 [1/7] (8.75ns)   --->   "%str_load_req = call i1 @_ssdm_op_ReadReq.m_axi.i8P(i8* %str_addr, i32 1)" [sha256/main.c:115]   --->   Operation 25 'readreq' 'str_load_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 26 [1/1] (8.75ns)   --->   "%str_addr_read = call i8 @_ssdm_op_Read.m_axi.i8P(i8* %str_addr)" [sha256/main.c:115]   --->   Operation 26 'read' 'str_addr_read' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 3.52>
ST_11 : Operation 27 [1/1] (1.55ns)   --->   "%icmp_ln115 = icmp eq i8 %str_addr_read, 0" [sha256/main.c:115]   --->   Operation 27 'icmp' 'icmp_ln115' <Predicate = true> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 28 [1/1] (3.52ns)   --->   "%length = add i64 %length_0, 1" [sha256/main.c:116]   --->   Operation 28 'add' 'length' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %icmp_ln115, label %2, label %1" [sha256/main.c:115]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 30 [1/1] (0.00ns)   --->   "ret i64 %length_0" [sha256/main.c:118]   --->   Operation 30 'ret' <Predicate = (icmp_ln115)> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ str]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
Port [ str_offset]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
specinterface_ln0 (specinterface) [ 000000000000]
str_offset_read   (read         ) [ 000000000000]
sext_ln115        (sext         ) [ 001111111111]
br_ln115          (br           ) [ 011111111111]
length_0          (phi          ) [ 001111111111]
add_ln115         (add          ) [ 000000000000]
str_addr          (getelementptr) [ 000111111110]
str_load_req      (readreq      ) [ 000000000000]
str_addr_read     (read         ) [ 000000000001]
icmp_ln115        (icmp         ) [ 001111111111]
length            (add          ) [ 011111111111]
br_ln115          (br           ) [ 011111111111]
ret_ln118         (ret          ) [ 000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="str">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="str"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="str_offset">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="str_offset"/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str4"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str5"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.i8P"/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="34" class="1004" name="str_offset_read_read_fu_34">
<pin_list>
<pin id="35" dir="0" index="0" bw="32" slack="0"/>
<pin id="36" dir="0" index="1" bw="32" slack="0"/>
<pin id="37" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="str_offset_read/1 "/>
</bind>
</comp>

<comp id="40" class="1004" name="grp_readreq_fu_40">
<pin_list>
<pin id="41" dir="0" index="0" bw="1" slack="0"/>
<pin id="42" dir="0" index="1" bw="8" slack="1"/>
<pin id="43" dir="0" index="2" bw="1" slack="0"/>
<pin id="44" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) " fcode="readreq"/>
<opset="str_load_req/3 "/>
</bind>
</comp>

<comp id="47" class="1004" name="str_addr_read_read_fu_47">
<pin_list>
<pin id="48" dir="0" index="0" bw="8" slack="0"/>
<pin id="49" dir="0" index="1" bw="8" slack="8"/>
<pin id="50" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="str_addr_read/10 "/>
</bind>
</comp>

<comp id="52" class="1005" name="length_0_reg_52">
<pin_list>
<pin id="53" dir="0" index="0" bw="64" slack="1"/>
<pin id="54" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="length_0 (phireg) "/>
</bind>
</comp>

<comp id="56" class="1004" name="length_0_phi_fu_56">
<pin_list>
<pin id="57" dir="0" index="0" bw="1" slack="1"/>
<pin id="58" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="59" dir="0" index="2" bw="64" slack="1"/>
<pin id="60" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="61" dir="1" index="4" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="length_0/2 "/>
</bind>
</comp>

<comp id="64" class="1004" name="sext_ln115_fu_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="32" slack="0"/>
<pin id="66" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="sext(35) " fcode="sext"/>
<opset="sext_ln115/1 "/>
</bind>
</comp>

<comp id="68" class="1004" name="add_ln115_fu_68">
<pin_list>
<pin id="69" dir="0" index="0" bw="64" slack="0"/>
<pin id="70" dir="0" index="1" bw="32" slack="1"/>
<pin id="71" dir="1" index="2" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln115/2 "/>
</bind>
</comp>

<comp id="73" class="1004" name="str_addr_fu_73">
<pin_list>
<pin id="74" dir="0" index="0" bw="8" slack="0"/>
<pin id="75" dir="0" index="1" bw="64" slack="0"/>
<pin id="76" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="str_addr/2 "/>
</bind>
</comp>

<comp id="79" class="1004" name="icmp_ln115_fu_79">
<pin_list>
<pin id="80" dir="0" index="0" bw="8" slack="1"/>
<pin id="81" dir="0" index="1" bw="1" slack="0"/>
<pin id="82" dir="1" index="2" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="icmp_ln115/11 "/>
</bind>
</comp>

<comp id="84" class="1004" name="length_fu_84">
<pin_list>
<pin id="85" dir="0" index="0" bw="64" slack="9"/>
<pin id="86" dir="0" index="1" bw="1" slack="0"/>
<pin id="87" dir="1" index="2" bw="64" slack="1"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="length/11 "/>
</bind>
</comp>

<comp id="90" class="1005" name="sext_ln115_reg_90">
<pin_list>
<pin id="91" dir="0" index="0" bw="64" slack="1"/>
<pin id="92" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="sext_ln115 "/>
</bind>
</comp>

<comp id="95" class="1005" name="str_addr_reg_95">
<pin_list>
<pin id="96" dir="0" index="0" bw="8" slack="1"/>
<pin id="97" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="str_addr "/>
</bind>
</comp>

<comp id="101" class="1005" name="str_addr_read_reg_101">
<pin_list>
<pin id="102" dir="0" index="0" bw="8" slack="1"/>
<pin id="103" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="str_addr_read "/>
</bind>
</comp>

<comp id="109" class="1005" name="length_reg_109">
<pin_list>
<pin id="110" dir="0" index="0" bw="64" slack="1"/>
<pin id="111" dir="1" index="1" bw="64" slack="1"/>
</pin_list>
<bind>
<opset="length "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="38"><net_src comp="20" pin="0"/><net_sink comp="34" pin=0"/></net>

<net id="39"><net_src comp="2" pin="0"/><net_sink comp="34" pin=1"/></net>

<net id="45"><net_src comp="24" pin="0"/><net_sink comp="40" pin=0"/></net>

<net id="46"><net_src comp="26" pin="0"/><net_sink comp="40" pin=2"/></net>

<net id="51"><net_src comp="28" pin="0"/><net_sink comp="47" pin=0"/></net>

<net id="55"><net_src comp="22" pin="0"/><net_sink comp="52" pin=0"/></net>

<net id="62"><net_src comp="52" pin="1"/><net_sink comp="56" pin=0"/></net>

<net id="63"><net_src comp="56" pin="4"/><net_sink comp="52" pin=0"/></net>

<net id="67"><net_src comp="34" pin="2"/><net_sink comp="64" pin=0"/></net>

<net id="72"><net_src comp="56" pin="4"/><net_sink comp="68" pin=0"/></net>

<net id="77"><net_src comp="0" pin="0"/><net_sink comp="73" pin=0"/></net>

<net id="78"><net_src comp="68" pin="2"/><net_sink comp="73" pin=1"/></net>

<net id="83"><net_src comp="30" pin="0"/><net_sink comp="79" pin=1"/></net>

<net id="88"><net_src comp="52" pin="1"/><net_sink comp="84" pin=0"/></net>

<net id="89"><net_src comp="32" pin="0"/><net_sink comp="84" pin=1"/></net>

<net id="93"><net_src comp="64" pin="1"/><net_sink comp="90" pin=0"/></net>

<net id="94"><net_src comp="90" pin="1"/><net_sink comp="68" pin=1"/></net>

<net id="98"><net_src comp="73" pin="2"/><net_sink comp="95" pin=0"/></net>

<net id="99"><net_src comp="95" pin="1"/><net_sink comp="40" pin=1"/></net>

<net id="100"><net_src comp="95" pin="1"/><net_sink comp="47" pin=1"/></net>

<net id="104"><net_src comp="47" pin="2"/><net_sink comp="101" pin=0"/></net>

<net id="105"><net_src comp="101" pin="1"/><net_sink comp="79" pin=0"/></net>

<net id="112"><net_src comp="84" pin="2"/><net_sink comp="109" pin=0"/></net>

<net id="113"><net_src comp="109" pin="1"/><net_sink comp="56" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: calculateStringLengt : str | {3 4 5 6 7 8 9 10 }
	Port: calculateStringLengt : str_offset | {1 }
  - Chain level:
	State 1
	State 2
		add_ln115 : 1
		str_addr : 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
		br_ln115 : 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------------|---------|---------|
| Operation|       Functional Unit      |    FF   |   LUT   |
|----------|----------------------------|---------|---------|
|    add   |       add_ln115_fu_68      |    0    |    71   |
|          |        length_fu_84        |    0    |    71   |
|----------|----------------------------|---------|---------|
|   icmp   |      icmp_ln115_fu_79      |    0    |    11   |
|----------|----------------------------|---------|---------|
|   read   | str_offset_read_read_fu_34 |    0    |    0    |
|          |  str_addr_read_read_fu_47  |    0    |    0    |
|----------|----------------------------|---------|---------|
|  readreq |      grp_readreq_fu_40     |    0    |    0    |
|----------|----------------------------|---------|---------|
|   sext   |      sext_ln115_fu_64      |    0    |    0    |
|----------|----------------------------|---------|---------|
|   Total  |                            |    0    |   153   |
|----------|----------------------------|---------|---------|

Memories:
N/A

* Register list:
+---------------------+--------+
|                     |   FF   |
+---------------------+--------+
|   length_0_reg_52   |   64   |
|    length_reg_109   |   64   |
|  sext_ln115_reg_90  |   64   |
|str_addr_read_reg_101|    8   |
|   str_addr_reg_95   |    8   |
+---------------------+--------+
|        Total        |   208  |
+---------------------+--------+

* Multiplexer (MUX) list: 
|-----------------|------|------|------|--------||---------||---------|
|       Comp      |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------------|------|------|------|--------||---------||---------|
| length_0_reg_52 |  p0  |   2  |  64  |   128  ||    9    |
|-----------------|------|------|------|--------||---------||---------|
|      Total      |      |      |      |   128  ||  1.769  ||    9    |
|-----------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   153  |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    1   |    -   |    9   |
|  Register |    -   |   208  |    -   |
+-----------+--------+--------+--------+
|   Total   |    1   |   208  |   162  |
+-----------+--------+--------+--------+
