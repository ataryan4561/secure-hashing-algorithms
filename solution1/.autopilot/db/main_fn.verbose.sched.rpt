

================================================================
== Vivado HLS Report for 'main_fn'
================================================================
* Date:           Wed Nov 29 19:46:05 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        sha256
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 7 [1/1] (1.00ns)   --->   "%output_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %output_r)"   --->   Operation 7 'read' 'output_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 8 [1/1] (1.00ns)   --->   "%input_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %input_r)"   --->   Operation 8 'read' 'input_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%ctx_data = alloca [64 x i8], align 1" [sha256/main.c:126]   --->   Operation 9 'alloca' 'ctx_data' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [2/2] (0.00ns)   --->   "%tmp = call fastcc i64 @calculateStringLengt(i8* %gmem, i32 %input_read)" [sha256/main.c:129]   --->   Operation 10 'call' 'tmp' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 0.00>
ST_2 : Operation 11 [1/2] (0.00ns)   --->   "%tmp = call fastcc i64 @calculateStringLengt(i8* %gmem, i32 %input_read)" [sha256/main.c:129]   --->   Operation 11 'call' 'tmp' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 12 [2/2] (8.75ns)   --->   "%tmp_s = call fastcc { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_update([64 x i8]* nocapture %ctx_data, i8* %gmem, i32 %input_read, i64 %tmp)" [sha256/main.c:129]   --->   Operation 12 'call' 'tmp_s' <Predicate = true> <Delay = 8.75> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 0.00>
ST_4 : Operation 13 [1/2] (0.00ns)   --->   "%tmp_s = call fastcc { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_update([64 x i8]* nocapture %ctx_data, i8* %gmem, i32 %input_read, i64 %tmp)" [sha256/main.c:129]   --->   Operation 13 'call' 'tmp_s' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 14 [1/1] (0.00ns)   --->   "%ctx_bitlen = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 1" [sha256/main.c:129]   --->   Operation 14 'extractvalue' 'ctx_bitlen' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 15 [1/1] (0.00ns)   --->   "%ctx_datalen = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 0" [sha256/main.c:129]   --->   Operation 15 'extractvalue' 'ctx_datalen' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 16 [1/1] (0.00ns)   --->   "%ctx_state_0 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 2" [sha256/main.c:129]   --->   Operation 16 'extractvalue' 'ctx_state_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 17 [1/1] (0.00ns)   --->   "%ctx_state_1 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 3" [sha256/main.c:129]   --->   Operation 17 'extractvalue' 'ctx_state_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 18 [1/1] (0.00ns)   --->   "%ctx_state_2 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 4" [sha256/main.c:129]   --->   Operation 18 'extractvalue' 'ctx_state_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 19 [1/1] (0.00ns)   --->   "%ctx_state_3 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 5" [sha256/main.c:129]   --->   Operation 19 'extractvalue' 'ctx_state_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 20 [1/1] (0.00ns)   --->   "%ctx_state_4 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 6" [sha256/main.c:129]   --->   Operation 20 'extractvalue' 'ctx_state_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 21 [1/1] (0.00ns)   --->   "%ctx_state_5 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 7" [sha256/main.c:129]   --->   Operation 21 'extractvalue' 'ctx_state_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 22 [1/1] (0.00ns)   --->   "%ctx_state_6 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 8" [sha256/main.c:129]   --->   Operation 22 'extractvalue' 'ctx_state_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 23 [1/1] (0.00ns)   --->   "%ctx_state_7 = extractvalue { i32, i64, i32, i32, i32, i32, i32, i32, i32, i32 } %tmp_s, 9" [sha256/main.c:129]   --->   Operation 23 'extractvalue' 'ctx_state_7' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.47>
ST_5 : Operation 24 [2/2] (2.47ns)   --->   "call fastcc void @sha256_final([64 x i8]* nocapture %ctx_data, i32 %ctx_datalen, i64 %ctx_bitlen, i32 %ctx_state_0, i32 %ctx_state_1, i32 %ctx_state_2, i32 %ctx_state_3, i32 %ctx_state_4, i32 %ctx_state_5, i32 %ctx_state_6, i32 %ctx_state_7, i8* %gmem, i32 %output_read)" [sha256/main.c:130]   --->   Operation 24 'call' <Predicate = true> <Delay = 2.47> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %gmem), !map !32"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @main_fn_str) nounwind"   --->   Operation 26 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256/main.c:123]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %gmem, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32, [5 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256/main.c:124]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %input_r, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 5, [1 x i8]* @bundle, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256/main.c:124]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %output_r, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32, [1 x i8]* @bundle2, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [sha256/main.c:125]   --->   Operation 30 'specinterface' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 31 [1/2] (0.00ns)   --->   "call fastcc void @sha256_final([64 x i8]* nocapture %ctx_data, i32 %ctx_datalen, i64 %ctx_bitlen, i32 %ctx_state_0, i32 %ctx_state_1, i32 %ctx_state_2, i32 %ctx_state_3, i32 %ctx_state_4, i32 %ctx_state_5, i32 %ctx_state_6, i32 %ctx_state_7, i8* %gmem, i32 %output_read)" [sha256/main.c:130]   --->   Operation 31 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 32 [1/1] (0.00ns)   --->   "ret void" [sha256/main.c:131]   --->   Operation 32 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'output_r' [7]  (1 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 8.75ns
The critical path consists of the following:
	'call' operation ('tmp_s', sha256/main.c:129) to 'sha256_update' [15]  (8.75 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 2.47ns
The critical path consists of the following:
	'call' operation ('call_ln130', sha256/main.c:130) to 'sha256_final' [26]  (2.47 ns)

 <State 6>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
