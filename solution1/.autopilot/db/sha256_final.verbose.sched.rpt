

================================================================
== Vivado HLS Report for 'sha256_final'
================================================================
* Date:           Wed Nov 29 19:46:04 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        sha256
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 2  |    ?|    ?|         1|          -|          -|     ?|    no    |
        |- Loop 3  |   38|   38|        15|          8|          1|     4|    yes   |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 8, depth = 15


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 8, D = 15, States = { 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 4 
2 --> 3 2 
3 --> 5 
4 --> 4 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 26 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 11 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.43>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %hash, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 32, [5 x i8]* @p_str4, [6 x i8]* @p_str5, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1)"   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%hash_offset_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %hash_offset)" [sha256/main.c:73]   --->   Operation 28 'read' 'hash_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read9)" [sha256/main.c:73]   --->   Operation 29 'read' 'p_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%p_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read8)" [sha256/main.c:73]   --->   Operation 30 'read' 'p_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%p_read_2 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read7)" [sha256/main.c:73]   --->   Operation 31 'read' 'p_read_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%p_read_3 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read6)" [sha256/main.c:73]   --->   Operation 32 'read' 'p_read_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%p_read_4 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read5)" [sha256/main.c:73]   --->   Operation 33 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%p_read_5 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read4)" [sha256/main.c:73]   --->   Operation 34 'read' 'p_read_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%p_read_6 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read3)" [sha256/main.c:73]   --->   Operation 35 'read' 'p_read_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%p_read_7 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %p_read2)" [sha256/main.c:73]   --->   Operation 36 'read' 'p_read_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%ctx_bitlen_read_1 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %ctx_bitlen_read)" [sha256/main.c:73]   --->   Operation 37 'read' 'ctx_bitlen_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%ctx_datalen_read_1 = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %ctx_datalen_read)" [sha256/main.c:73]   --->   Operation 38 'read' 'ctx_datalen_read_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (2.47ns)   --->   "%icmp_ln76 = icmp ult i32 %ctx_datalen_read_1, 56" [sha256/main.c:76]   --->   Operation 39 'icmp' 'icmp_ln76' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln77 = zext i32 %ctx_datalen_read_1 to i64" [sha256/main.c:77]   --->   Operation 40 'zext' 'zext_ln77' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%ctx_data_addr = getelementptr [64 x i8]* %ctx_data, i64 0, i64 %zext_ln77" [sha256/main.c:77]   --->   Operation 41 'getelementptr' 'ctx_data_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (2.32ns)   --->   "store i8 -128, i8* %ctx_data_addr, align 1" [sha256/main.c:77]   --->   Operation 42 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %icmp_ln76, label %.preheader1.preheader, label %.preheader.preheader" [sha256/main.c:76]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.76ns)   --->   "br label %.preheader" [sha256/main.c:82]   --->   Operation 44 'br' <Predicate = (!icmp_ln76)> <Delay = 1.76>
ST_1 : Operation 45 [1/1] (1.76ns)   --->   "br label %.preheader1" [sha256/main.c:77]   --->   Operation 45 'br' <Predicate = (icmp_ln76)> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.97>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%i_1_in = phi i32 [ %i_4, %2 ], [ %ctx_datalen_read_1, %.preheader.preheader ]"   --->   Operation 46 'phi' 'i_1_in' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (2.55ns)   --->   "%i_4 = add i32 %i_1_in, 1" [sha256/main.c:82]   --->   Operation 47 'add' 'i_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_1 = call i26 @_ssdm_op_PartSelect.i26.i32.i32.i32(i32 %i_4, i32 6, i32 31)" [sha256/main.c:83]   --->   Operation 48 'partselect' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (2.45ns)   --->   "%icmp_ln83 = icmp eq i26 %tmp_1, 0" [sha256/main.c:83]   --->   Operation 49 'icmp' 'icmp_ln83' <Predicate = true> <Delay = 2.45> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "br i1 %icmp_ln83, label %2, label %3" [sha256/main.c:83]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln84 = zext i32 %i_4 to i64" [sha256/main.c:84]   --->   Operation 51 'zext' 'zext_ln84' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%ctx_data_addr_2 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 %zext_ln84" [sha256/main.c:84]   --->   Operation 52 'getelementptr' 'ctx_data_addr_2' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_addr_2, align 1" [sha256/main.c:84]   --->   Operation 53 'store' <Predicate = (icmp_ln83)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "br label %.preheader" [sha256/main.c:85]   --->   Operation 54 'br' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 55 [2/2] (1.76ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %p_read_7, i32 %p_read_6, i32 %p_read_5, i32 %p_read_4, i32 %p_read_3, i32 %p_read_2, i32 %p_read_1, i32 %p_read, [64 x i8]* %ctx_data)" [sha256/main.c:86]   --->   Operation 55 'call' 'call_ret1' <Predicate = (!icmp_ln83)> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 3.52>
ST_3 : Operation 56 [1/2] (2.55ns)   --->   "%call_ret1 = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %p_read_7, i32 %p_read_6, i32 %p_read_5, i32 %p_read_4, i32 %p_read_3, i32 %p_read_2, i32 %p_read_1, i32 %p_read, [64 x i8]* %ctx_data)" [sha256/main.c:86]   --->   Operation 56 'call' 'call_ret1' <Predicate = (!icmp_ln76)> <Delay = 2.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%ctx_state_0_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 0" [sha256/main.c:86]   --->   Operation 57 'extractvalue' 'ctx_state_0_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%ctx_state_1_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 1" [sha256/main.c:86]   --->   Operation 58 'extractvalue' 'ctx_state_1_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%ctx_state_2_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 2" [sha256/main.c:86]   --->   Operation 59 'extractvalue' 'ctx_state_2_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%ctx_state_3_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 3" [sha256/main.c:86]   --->   Operation 60 'extractvalue' 'ctx_state_3_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%ctx_state_4_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 4" [sha256/main.c:86]   --->   Operation 61 'extractvalue' 'ctx_state_4_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%ctx_state_5_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 5" [sha256/main.c:86]   --->   Operation 62 'extractvalue' 'ctx_state_5_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%ctx_state_6_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 6" [sha256/main.c:86]   --->   Operation 63 'extractvalue' 'ctx_state_6_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%ctx_state_7_ret1 = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret1, 7" [sha256/main.c:86]   --->   Operation 64 'extractvalue' 'ctx_state_7_ret1' <Predicate = (!icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 65 'br' <Predicate = (!icmp_ln76)> <Delay = 1.76>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%shl_ln89 = shl i32 %ctx_datalen_read_1, 3" [sha256/main.c:89]   --->   Operation 66 'shl' 'shl_ln89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i32 %shl_ln89 to i64" [sha256/main.c:89]   --->   Operation 67 'zext' 'zext_ln89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln89 = trunc i64 %ctx_bitlen_read_1 to i8" [sha256/main.c:89]   --->   Operation 68 'trunc' 'trunc_ln89' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%trunc_ln89_2 = trunc i32 %ctx_datalen_read_1 to i5" [sha256/main.c:89]   --->   Operation 69 'trunc' 'trunc_ln89_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln89_1 = call i8 @_ssdm_op_BitConcatenate.i8.i5.i3(i5 %trunc_ln89_2, i3 0)" [sha256/main.c:89]   --->   Operation 70 'bitconcatenate' 'trunc_ln89_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln89_4 = trunc i64 %ctx_bitlen_read_1 to i16" [sha256/main.c:89]   --->   Operation 71 'trunc' 'trunc_ln89_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln89_6 = trunc i32 %ctx_datalen_read_1 to i13" [sha256/main.c:89]   --->   Operation 72 'trunc' 'trunc_ln89_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln89_3 = call i16 @_ssdm_op_BitConcatenate.i16.i13.i3(i13 %trunc_ln89_6, i3 0)" [sha256/main.c:89]   --->   Operation 73 'bitconcatenate' 'trunc_ln89_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln89_7 = trunc i64 %ctx_bitlen_read_1 to i24" [sha256/main.c:89]   --->   Operation 74 'trunc' 'trunc_ln89_7' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln89_8 = trunc i32 %ctx_datalen_read_1 to i21" [sha256/main.c:89]   --->   Operation 75 'trunc' 'trunc_ln89_8' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%trunc_ln89_5 = call i24 @_ssdm_op_BitConcatenate.i24.i21.i3(i21 %trunc_ln89_8, i3 0)" [sha256/main.c:89]   --->   Operation 76 'bitconcatenate' 'trunc_ln89_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln89_9 = trunc i64 %ctx_bitlen_read_1 to i32" [sha256/main.c:89]   --->   Operation 77 'trunc' 'trunc_ln89_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln89_10 = trunc i64 %ctx_bitlen_read_1 to i40" [sha256/main.c:89]   --->   Operation 78 'trunc' 'trunc_ln89_10' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln89_1 = zext i32 %shl_ln89 to i40" [sha256/main.c:89]   --->   Operation 79 'zext' 'zext_ln89_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln89_11 = trunc i64 %ctx_bitlen_read_1 to i48" [sha256/main.c:89]   --->   Operation 80 'trunc' 'trunc_ln89_11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln89_2 = zext i32 %shl_ln89 to i48" [sha256/main.c:89]   --->   Operation 81 'zext' 'zext_ln89_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln89_12 = trunc i64 %ctx_bitlen_read_1 to i56" [sha256/main.c:89]   --->   Operation 82 'trunc' 'trunc_ln89_12' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln89_3 = zext i32 %shl_ln89 to i56" [sha256/main.c:89]   --->   Operation 83 'zext' 'zext_ln89_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (3.52ns)   --->   "%add_ln89 = add i64 %zext_ln89, %ctx_bitlen_read_1" [sha256/main.c:89]   --->   Operation 84 'add' 'add_ln89' <Predicate = true> <Delay = 3.52> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (3.31ns)   --->   "%add_ln90_1 = add i56 %zext_ln89_3, %trunc_ln89_12" [sha256/main.c:90]   --->   Operation 85 'add' 'add_ln90_1' <Predicate = true> <Delay = 3.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (3.10ns)   --->   "%add_ln90_2 = add i48 %zext_ln89_2, %trunc_ln89_11" [sha256/main.c:90]   --->   Operation 86 'add' 'add_ln90_2' <Predicate = true> <Delay = 3.10> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (2.87ns)   --->   "%add_ln90_3 = add i40 %zext_ln89_1, %trunc_ln89_10" [sha256/main.c:90]   --->   Operation 87 'add' 'add_ln90_3' <Predicate = true> <Delay = 2.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (2.55ns)   --->   "%add_ln90_4 = add i32 %shl_ln89, %trunc_ln89_9" [sha256/main.c:90]   --->   Operation 88 'add' 'add_ln90_4' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (2.31ns)   --->   "%add_ln90_5 = add i24 %trunc_ln89_5, %trunc_ln89_7" [sha256/main.c:90]   --->   Operation 89 'add' 'add_ln90_5' <Predicate = true> <Delay = 2.31> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (2.07ns)   --->   "%add_ln90_6 = add i16 %trunc_ln89_3, %trunc_ln89_4" [sha256/main.c:90]   --->   Operation 90 'add' 'add_ln90_6' <Predicate = true> <Delay = 2.07> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (1.91ns)   --->   "%add_ln90 = add i8 %trunc_ln89, %trunc_ln89_1" [sha256/main.c:90]   --->   Operation 91 'add' 'add_ln90' <Predicate = true> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns)   --->   "%trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %add_ln90_6, i32 8, i32 15)" [sha256/main.c:91]   --->   Operation 92 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 93 [1/1] (0.00ns)   --->   "%trunc_ln2 = call i8 @_ssdm_op_PartSelect.i8.i24.i32.i32(i24 %add_ln90_5, i32 16, i32 23)" [sha256/main.c:92]   --->   Operation 93 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %add_ln90_4, i32 24, i32 31)" [sha256/main.c:93]   --->   Operation 94 'partselect' 'trunc_ln3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln4 = call i8 @_ssdm_op_PartSelect.i8.i40.i32.i32(i40 %add_ln90_3, i32 32, i32 39)" [sha256/main.c:94]   --->   Operation 95 'partselect' 'trunc_ln4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%trunc_ln5 = call i8 @_ssdm_op_PartSelect.i8.i48.i32.i32(i48 %add_ln90_2, i32 40, i32 47)" [sha256/main.c:95]   --->   Operation 96 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln6 = call i8 @_ssdm_op_PartSelect.i8.i56.i32.i32(i56 %add_ln90_1, i32 48, i32 55)" [sha256/main.c:96]   --->   Operation 97 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 98 [1/1] (0.00ns)   --->   "%trunc_ln7 = call i8 @_ssdm_op_PartSelect.i8.i64.i32.i32(i64 %add_ln89, i32 56, i32 63)" [sha256/main.c:97]   --->   Operation 98 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>

State 4 <SV = 1> <Delay = 4.87>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%i_0_in = phi i32 [ %i, %1 ], [ %ctx_datalen_read_1, %.preheader1.preheader ]"   --->   Operation 99 'phi' 'i_0_in' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (2.55ns)   --->   "%i = add i32 %i_0_in, 1" [sha256/main.c:77]   --->   Operation 100 'add' 'i' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 101 [1/1] (2.47ns)   --->   "%icmp_ln78 = icmp eq i32 %i_0_in, 55" [sha256/main.c:78]   --->   Operation 101 'icmp' 'icmp_ln78' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "br i1 %icmp_ln78, label %.loopexit.loopexit, label %1" [sha256/main.c:78]   --->   Operation 102 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln79 = zext i32 %i to i64" [sha256/main.c:79]   --->   Operation 103 'zext' 'zext_ln79' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_4 : Operation 104 [1/1] (0.00ns)   --->   "%ctx_data_addr_1 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 %zext_ln79" [sha256/main.c:79]   --->   Operation 104 'getelementptr' 'ctx_data_addr_1' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (2.32ns)   --->   "store i8 0, i8* %ctx_data_addr_1, align 1" [sha256/main.c:79]   --->   Operation 105 'store' <Predicate = (!icmp_ln78)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "br label %.preheader1" [sha256/main.c:80]   --->   Operation 106 'br' <Predicate = (!icmp_ln78)> <Delay = 0.00>
ST_4 : Operation 107 [1/1] (1.76ns)   --->   "br label %.loopexit"   --->   Operation 107 'br' <Predicate = (icmp_ln78)> <Delay = 1.76>

State 5 <SV = 3> <Delay = 2.32>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%ctx_state_0_0 = phi i32 [ %ctx_state_0_ret1, %3 ], [ %p_read_7, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 108 'phi' 'ctx_state_0_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%ctx_state_1_0 = phi i32 [ %ctx_state_1_ret1, %3 ], [ %p_read_6, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 109 'phi' 'ctx_state_1_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%ctx_state_2_0 = phi i32 [ %ctx_state_2_ret1, %3 ], [ %p_read_5, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 110 'phi' 'ctx_state_2_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%ctx_state_3_0 = phi i32 [ %ctx_state_3_ret1, %3 ], [ %p_read_4, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 111 'phi' 'ctx_state_3_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%ctx_state_4_0 = phi i32 [ %ctx_state_4_ret1, %3 ], [ %p_read_3, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 112 'phi' 'ctx_state_4_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%ctx_state_5_0 = phi i32 [ %ctx_state_5_ret1, %3 ], [ %p_read_2, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 113 'phi' 'ctx_state_5_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%ctx_state_6_0 = phi i32 [ %ctx_state_6_ret1, %3 ], [ %p_read_1, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 114 'phi' 'ctx_state_6_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%ctx_state_7_0 = phi i32 [ %ctx_state_7_ret1, %3 ], [ %p_read, %.loopexit.loopexit ]" [sha256/main.c:86]   --->   Operation 115 'phi' 'ctx_state_7_0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%ctx_data_addr_3 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 63" [sha256/main.c:90]   --->   Operation 116 'getelementptr' 'ctx_data_addr_3' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 117 [1/1] (2.32ns)   --->   "store i8 %add_ln90, i8* %ctx_data_addr_3, align 1" [sha256/main.c:90]   --->   Operation 117 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%ctx_data_addr_4 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 62" [sha256/main.c:91]   --->   Operation 118 'getelementptr' 'ctx_data_addr_4' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (2.32ns)   --->   "store i8 %trunc_ln1, i8* %ctx_data_addr_4, align 1" [sha256/main.c:91]   --->   Operation 119 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 6 <SV = 4> <Delay = 2.32>
ST_6 : Operation 120 [1/1] (0.00ns)   --->   "%ctx_data_addr_5 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 61" [sha256/main.c:92]   --->   Operation 120 'getelementptr' 'ctx_data_addr_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 121 [1/1] (2.32ns)   --->   "store i8 %trunc_ln2, i8* %ctx_data_addr_5, align 1" [sha256/main.c:92]   --->   Operation 121 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_6 : Operation 122 [1/1] (0.00ns)   --->   "%ctx_data_addr_6 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 60" [sha256/main.c:93]   --->   Operation 122 'getelementptr' 'ctx_data_addr_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 123 [1/1] (2.32ns)   --->   "store i8 %trunc_ln3, i8* %ctx_data_addr_6, align 1" [sha256/main.c:93]   --->   Operation 123 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 7 <SV = 5> <Delay = 2.32>
ST_7 : Operation 124 [1/1] (0.00ns)   --->   "%ctx_data_addr_7 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 59" [sha256/main.c:94]   --->   Operation 124 'getelementptr' 'ctx_data_addr_7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 125 [1/1] (2.32ns)   --->   "store i8 %trunc_ln4, i8* %ctx_data_addr_7, align 1" [sha256/main.c:94]   --->   Operation 125 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 126 [1/1] (0.00ns)   --->   "%ctx_data_addr_8 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 58" [sha256/main.c:95]   --->   Operation 126 'getelementptr' 'ctx_data_addr_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 127 [1/1] (2.32ns)   --->   "store i8 %trunc_ln5, i8* %ctx_data_addr_8, align 1" [sha256/main.c:95]   --->   Operation 127 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 8 <SV = 6> <Delay = 2.32>
ST_8 : Operation 128 [1/1] (0.00ns)   --->   "%ctx_data_addr_9 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 57" [sha256/main.c:96]   --->   Operation 128 'getelementptr' 'ctx_data_addr_9' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 129 [1/1] (2.32ns)   --->   "store i8 %trunc_ln6, i8* %ctx_data_addr_9, align 1" [sha256/main.c:96]   --->   Operation 129 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_8 : Operation 130 [1/1] (0.00ns)   --->   "%ctx_data_addr_10 = getelementptr [64 x i8]* %ctx_data, i64 0, i64 56" [sha256/main.c:97]   --->   Operation 130 'getelementptr' 'ctx_data_addr_10' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 131 [1/1] (2.32ns)   --->   "store i8 %trunc_ln7, i8* %ctx_data_addr_10, align 1" [sha256/main.c:97]   --->   Operation 131 'store' <Predicate = true> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 9 <SV = 7> <Delay = 1.76>
ST_9 : Operation 132 [2/2] (1.76ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %ctx_state_0_0, i32 %ctx_state_1_0, i32 %ctx_state_2_0, i32 %ctx_state_3_0, i32 %ctx_state_4_0, i32 %ctx_state_5_0, i32 %ctx_state_6_0, i32 %ctx_state_7_0, [64 x i8]* %ctx_data)" [sha256/main.c:99]   --->   Operation 132 'call' 'call_ret' <Predicate = true> <Delay = 1.76> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 8> <Delay = 2.55>
ST_10 : Operation 133 [1/2] (2.55ns)   --->   "%call_ret = call fastcc { i32, i32, i32, i32, i32, i32, i32, i32 } @sha256_transform(i32 %ctx_state_0_0, i32 %ctx_state_1_0, i32 %ctx_state_2_0, i32 %ctx_state_3_0, i32 %ctx_state_4_0, i32 %ctx_state_5_0, i32 %ctx_state_6_0, i32 %ctx_state_7_0, [64 x i8]* %ctx_data)" [sha256/main.c:99]   --->   Operation 133 'call' 'call_ret' <Predicate = true> <Delay = 2.55> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 134 [1/1] (0.00ns)   --->   "%ctx_state_0_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 0" [sha256/main.c:99]   --->   Operation 134 'extractvalue' 'ctx_state_0_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 135 [1/1] (0.00ns)   --->   "%ctx_state_1_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 1" [sha256/main.c:99]   --->   Operation 135 'extractvalue' 'ctx_state_1_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (0.00ns)   --->   "%ctx_state_2_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 2" [sha256/main.c:99]   --->   Operation 136 'extractvalue' 'ctx_state_2_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 137 [1/1] (0.00ns)   --->   "%ctx_state_3_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 3" [sha256/main.c:99]   --->   Operation 137 'extractvalue' 'ctx_state_3_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 138 [1/1] (0.00ns)   --->   "%ctx_state_4_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 4" [sha256/main.c:99]   --->   Operation 138 'extractvalue' 'ctx_state_4_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 139 [1/1] (0.00ns)   --->   "%ctx_state_5_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 5" [sha256/main.c:99]   --->   Operation 139 'extractvalue' 'ctx_state_5_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 140 [1/1] (0.00ns)   --->   "%ctx_state_6_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 6" [sha256/main.c:99]   --->   Operation 140 'extractvalue' 'ctx_state_6_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.00ns)   --->   "%ctx_state_7_ret = extractvalue { i32, i32, i32, i32, i32, i32, i32, i32 } %call_ret, 7" [sha256/main.c:99]   --->   Operation 141 'extractvalue' 'ctx_state_7_ret' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (0.00ns)   --->   "%sext_ln101 = sext i32 %hash_offset_read to i33" [sha256/main.c:101]   --->   Operation 142 'sext' 'sext_ln101' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 143 [1/1] (1.76ns)   --->   "br label %4" [sha256/main.c:101]   --->   Operation 143 'br' <Predicate = true> <Delay = 1.76>

State 11 <SV = 9> <Delay = 6.20>
ST_11 : Operation 144 [1/1] (0.00ns)   --->   "%i_2 = phi i3 [ 0, %.loopexit ], [ %i_5, %hls_label_0 ]"   --->   Operation 144 'phi' 'i_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 145 [1/1] (1.13ns)   --->   "%icmp_ln101 = icmp eq i3 %i_2, -4" [sha256/main.c:101]   --->   Operation 145 'icmp' 'icmp_ln101' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 146 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 146 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 147 [1/1] (1.65ns)   --->   "%i_5 = add i3 %i_2, 1" [sha256/main.c:101]   --->   Operation 147 'add' 'i_5' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 148 [1/1] (0.00ns)   --->   "br i1 %icmp_ln101, label %5, label %hls_label_0" [sha256/main.c:101]   --->   Operation 148 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 149 [1/1] (0.00ns)   --->   "%trunc_ln103 = trunc i3 %i_2 to i2" [sha256/main.c:103]   --->   Operation 149 'trunc' 'trunc_ln103' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_11 : Operation 150 [1/1] (0.00ns)   --->   "%shl_ln1 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %trunc_ln103, i3 0)" [sha256/main.c:103]   --->   Operation 150 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_11 : Operation 151 [1/1] (1.78ns)   --->   "%sub_ln103 = sub i5 -8, %shl_ln1" [sha256/main.c:103]   --->   Operation 151 'sub' 'sub_ln103' <Predicate = (!icmp_ln101)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln103 = zext i5 %sub_ln103 to i32" [sha256/main.c:103]   --->   Operation 152 'zext' 'zext_ln103' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_11 : Operation 153 [1/1] (4.42ns)   --->   "%lshr_ln103 = lshr i32 %ctx_state_0_ret, %zext_ln103" [sha256/main.c:103]   --->   Operation 153 'lshr' 'lshr_ln103' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 154 [1/1] (0.00ns)   --->   "%trunc_ln103_1 = trunc i32 %lshr_ln103 to i8" [sha256/main.c:103]   --->   Operation 154 'trunc' 'trunc_ln103_1' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_11 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln103_1 = zext i3 %i_2 to i33" [sha256/main.c:103]   --->   Operation 155 'zext' 'zext_ln103_1' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_11 : Operation 156 [1/1] (2.55ns)   --->   "%add_ln103 = add i33 %zext_ln103_1, %sext_ln101" [sha256/main.c:103]   --->   Operation 156 'add' 'add_ln103' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 157 [1/1] (0.00ns)   --->   "%sext_ln103 = sext i33 %add_ln103 to i64" [sha256/main.c:103]   --->   Operation 157 'sext' 'sext_ln103' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_11 : Operation 158 [1/1] (0.00ns)   --->   "%hash_addr = getelementptr i8* %hash, i64 %sext_ln103" [sha256/main.c:103]   --->   Operation 158 'getelementptr' 'hash_addr' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 12 <SV = 10> <Delay = 8.75>
ST_12 : Operation 159 [1/1] (8.75ns)   --->   "%hash_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr, i32 1)" [sha256/main.c:103]   --->   Operation 159 'writereq' 'hash_addr_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 160 [1/1] (4.42ns)   --->   "%lshr_ln104 = lshr i32 %ctx_state_1_ret, %zext_ln103" [sha256/main.c:104]   --->   Operation 160 'lshr' 'lshr_ln104' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 161 [1/1] (0.00ns)   --->   "%trunc_ln104 = trunc i32 %lshr_ln104 to i8" [sha256/main.c:104]   --->   Operation 161 'trunc' 'trunc_ln104' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_12 : Operation 162 [1/1] (0.96ns)   --->   "%xor_ln104 = xor i3 %i_2, -4" [sha256/main.c:104]   --->   Operation 162 'xor' 'xor_ln104' <Predicate = (!icmp_ln101)> <Delay = 0.96> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.96> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 163 [1/1] (0.00ns)   --->   "%zext_ln104 = zext i3 %xor_ln104 to i33" [sha256/main.c:104]   --->   Operation 163 'zext' 'zext_ln104' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_12 : Operation 164 [1/1] (2.55ns)   --->   "%add_ln104 = add i33 %zext_ln104, %sext_ln101" [sha256/main.c:104]   --->   Operation 164 'add' 'add_ln104' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 165 [1/1] (0.00ns)   --->   "%sext_ln104 = sext i33 %add_ln104 to i64" [sha256/main.c:104]   --->   Operation 165 'sext' 'sext_ln104' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_12 : Operation 166 [1/1] (0.00ns)   --->   "%hash_addr_1 = getelementptr i8* %hash, i64 %sext_ln104" [sha256/main.c:104]   --->   Operation 166 'getelementptr' 'hash_addr_1' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 13 <SV = 11> <Delay = 8.75>
ST_13 : Operation 167 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr, i8 %trunc_ln103_1, i1 true)" [sha256/main.c:103]   --->   Operation 167 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 168 [1/1] (8.75ns)   --->   "%hash_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr_1, i32 1)" [sha256/main.c:104]   --->   Operation 168 'writereq' 'hash_addr_1_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 169 [1/1] (4.42ns)   --->   "%lshr_ln105 = lshr i32 %ctx_state_2_ret, %zext_ln103" [sha256/main.c:105]   --->   Operation 169 'lshr' 'lshr_ln105' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 170 [1/1] (0.00ns)   --->   "%trunc_ln105 = trunc i32 %lshr_ln105 to i8" [sha256/main.c:105]   --->   Operation 170 'trunc' 'trunc_ln105' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_13 : Operation 171 [1/1] (0.00ns)   --->   "%or_ln = call i4 @_ssdm_op_BitConcatenate.i4.i1.i3(i1 true, i3 %i_2)" [sha256/main.c:105]   --->   Operation 171 'bitconcatenate' 'or_ln' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_13 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i4 %or_ln to i33" [sha256/main.c:105]   --->   Operation 172 'zext' 'zext_ln105' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_13 : Operation 173 [1/1] (2.55ns)   --->   "%add_ln105 = add i33 %zext_ln105, %sext_ln101" [sha256/main.c:105]   --->   Operation 173 'add' 'add_ln105' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 174 [1/1] (0.00ns)   --->   "%sext_ln105 = sext i33 %add_ln105 to i64" [sha256/main.c:105]   --->   Operation 174 'sext' 'sext_ln105' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_13 : Operation 175 [1/1] (0.00ns)   --->   "%hash_addr_2 = getelementptr i8* %hash, i64 %sext_ln105" [sha256/main.c:105]   --->   Operation 175 'getelementptr' 'hash_addr_2' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 14 <SV = 12> <Delay = 8.75>
ST_14 : Operation 176 [5/5] (8.75ns)   --->   "%hash_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr)" [sha256/main.c:103]   --->   Operation 176 'writeresp' 'hash_addr_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 177 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr_1, i8 %trunc_ln104, i1 true)" [sha256/main.c:104]   --->   Operation 177 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 178 [1/1] (8.75ns)   --->   "%hash_addr_2_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr_2, i32 1)" [sha256/main.c:105]   --->   Operation 178 'writereq' 'hash_addr_2_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 179 [1/1] (4.42ns)   --->   "%lshr_ln106 = lshr i32 %ctx_state_3_ret, %zext_ln103" [sha256/main.c:106]   --->   Operation 179 'lshr' 'lshr_ln106' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 180 [1/1] (0.00ns)   --->   "%trunc_ln106 = trunc i32 %lshr_ln106 to i8" [sha256/main.c:106]   --->   Operation 180 'trunc' 'trunc_ln106' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_14 : Operation 181 [1/1] (0.00ns)   --->   "%sext_ln106 = sext i3 %xor_ln104 to i4" [sha256/main.c:106]   --->   Operation 181 'sext' 'sext_ln106' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_14 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i4 %sext_ln106 to i33" [sha256/main.c:106]   --->   Operation 182 'zext' 'zext_ln106' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_14 : Operation 183 [1/1] (2.55ns)   --->   "%add_ln106 = add i33 %zext_ln106, %sext_ln101" [sha256/main.c:106]   --->   Operation 183 'add' 'add_ln106' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 184 [1/1] (0.00ns)   --->   "%sext_ln106_1 = sext i33 %add_ln106 to i64" [sha256/main.c:106]   --->   Operation 184 'sext' 'sext_ln106_1' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_14 : Operation 185 [1/1] (0.00ns)   --->   "%hash_addr_3 = getelementptr i8* %hash, i64 %sext_ln106_1" [sha256/main.c:106]   --->   Operation 185 'getelementptr' 'hash_addr_3' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 15 <SV = 13> <Delay = 8.75>
ST_15 : Operation 186 [4/5] (8.75ns)   --->   "%hash_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr)" [sha256/main.c:103]   --->   Operation 186 'writeresp' 'hash_addr_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 187 [5/5] (8.75ns)   --->   "%hash_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_1)" [sha256/main.c:104]   --->   Operation 187 'writeresp' 'hash_addr_1_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 188 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr_2, i8 %trunc_ln105, i1 true)" [sha256/main.c:105]   --->   Operation 188 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 189 [1/1] (8.75ns)   --->   "%hash_addr_3_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr_3, i32 1)" [sha256/main.c:106]   --->   Operation 189 'writereq' 'hash_addr_3_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 190 [1/1] (4.42ns)   --->   "%lshr_ln107 = lshr i32 %ctx_state_4_ret, %zext_ln103" [sha256/main.c:107]   --->   Operation 190 'lshr' 'lshr_ln107' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 191 [1/1] (0.00ns)   --->   "%trunc_ln107 = trunc i32 %lshr_ln107 to i8" [sha256/main.c:107]   --->   Operation 191 'trunc' 'trunc_ln107' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_15 : Operation 192 [1/1] (0.00ns)   --->   "%or_ln3 = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 -2, i3 %i_2)" [sha256/main.c:107]   --->   Operation 192 'bitconcatenate' 'or_ln3' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_15 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln107 = zext i5 %or_ln3 to i33" [sha256/main.c:107]   --->   Operation 193 'zext' 'zext_ln107' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_15 : Operation 194 [1/1] (2.55ns)   --->   "%add_ln107 = add i33 %zext_ln107, %sext_ln101" [sha256/main.c:107]   --->   Operation 194 'add' 'add_ln107' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 195 [1/1] (0.00ns)   --->   "%sext_ln107 = sext i33 %add_ln107 to i64" [sha256/main.c:107]   --->   Operation 195 'sext' 'sext_ln107' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_15 : Operation 196 [1/1] (0.00ns)   --->   "%hash_addr_4 = getelementptr i8* %hash, i64 %sext_ln107" [sha256/main.c:107]   --->   Operation 196 'getelementptr' 'hash_addr_4' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 16 <SV = 14> <Delay = 8.75>
ST_16 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln101 = zext i3 %i_2 to i5" [sha256/main.c:101]   --->   Operation 197 'zext' 'zext_ln101' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 198 [3/5] (8.75ns)   --->   "%hash_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr)" [sha256/main.c:103]   --->   Operation 198 'writeresp' 'hash_addr_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 199 [4/5] (8.75ns)   --->   "%hash_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_1)" [sha256/main.c:104]   --->   Operation 199 'writeresp' 'hash_addr_1_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 200 [5/5] (8.75ns)   --->   "%hash_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_2)" [sha256/main.c:105]   --->   Operation 200 'writeresp' 'hash_addr_2_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 201 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr_3, i8 %trunc_ln106, i1 true)" [sha256/main.c:106]   --->   Operation 201 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 202 [1/1] (8.75ns)   --->   "%hash_addr_4_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr_4, i32 1)" [sha256/main.c:107]   --->   Operation 202 'writereq' 'hash_addr_4_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 203 [1/1] (4.42ns)   --->   "%lshr_ln108 = lshr i32 %ctx_state_5_ret, %zext_ln103" [sha256/main.c:108]   --->   Operation 203 'lshr' 'lshr_ln108' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 204 [1/1] (0.00ns)   --->   "%trunc_ln108 = trunc i32 %lshr_ln108 to i8" [sha256/main.c:108]   --->   Operation 204 'trunc' 'trunc_ln108' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 205 [1/1] (1.78ns)   --->   "%add_ln108 = add i5 -12, %zext_ln101" [sha256/main.c:108]   --->   Operation 205 'add' 'add_ln108' <Predicate = (!icmp_ln101)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln108 = zext i5 %add_ln108 to i33" [sha256/main.c:108]   --->   Operation 206 'zext' 'zext_ln108' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 207 [1/1] (2.55ns)   --->   "%add_ln108_1 = add i33 %zext_ln108, %sext_ln101" [sha256/main.c:108]   --->   Operation 207 'add' 'add_ln108_1' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 208 [1/1] (0.00ns)   --->   "%sext_ln108 = sext i33 %add_ln108_1 to i64" [sha256/main.c:108]   --->   Operation 208 'sext' 'sext_ln108' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 209 [1/1] (0.00ns)   --->   "%hash_addr_5 = getelementptr i8* %hash, i64 %sext_ln108" [sha256/main.c:108]   --->   Operation 209 'getelementptr' 'hash_addr_5' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 210 [1/1] (0.00ns)   --->   "%sext_ln109 = sext i4 %or_ln to i5" [sha256/main.c:109]   --->   Operation 210 'sext' 'sext_ln109' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln109 = zext i5 %sext_ln109 to i33" [sha256/main.c:109]   --->   Operation 211 'zext' 'zext_ln109' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 212 [1/1] (2.55ns)   --->   "%add_ln109 = add i33 %zext_ln109, %sext_ln101" [sha256/main.c:109]   --->   Operation 212 'add' 'add_ln109' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 213 [1/1] (0.00ns)   --->   "%sext_ln109_1 = sext i33 %add_ln109 to i64" [sha256/main.c:109]   --->   Operation 213 'sext' 'sext_ln109_1' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 214 [1/1] (0.00ns)   --->   "%hash_addr_6 = getelementptr i8* %hash, i64 %sext_ln109_1" [sha256/main.c:109]   --->   Operation 214 'getelementptr' 'hash_addr_6' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 215 [1/1] (0.00ns)   --->   "%sext_ln110 = sext i3 %xor_ln104 to i5" [sha256/main.c:110]   --->   Operation 215 'sext' 'sext_ln110' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 216 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i5 %sext_ln110 to i33" [sha256/main.c:110]   --->   Operation 216 'zext' 'zext_ln110' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 217 [1/1] (2.55ns)   --->   "%add_ln110 = add i33 %zext_ln110, %sext_ln101" [sha256/main.c:110]   --->   Operation 217 'add' 'add_ln110' <Predicate = (!icmp_ln101)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 218 [1/1] (0.00ns)   --->   "%sext_ln110_1 = sext i33 %add_ln110 to i64" [sha256/main.c:110]   --->   Operation 218 'sext' 'sext_ln110_1' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_16 : Operation 219 [1/1] (0.00ns)   --->   "%hash_addr_7 = getelementptr i8* %hash, i64 %sext_ln110_1" [sha256/main.c:110]   --->   Operation 219 'getelementptr' 'hash_addr_7' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 17 <SV = 15> <Delay = 8.75>
ST_17 : Operation 220 [2/5] (8.75ns)   --->   "%hash_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr)" [sha256/main.c:103]   --->   Operation 220 'writeresp' 'hash_addr_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 221 [3/5] (8.75ns)   --->   "%hash_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_1)" [sha256/main.c:104]   --->   Operation 221 'writeresp' 'hash_addr_1_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 222 [4/5] (8.75ns)   --->   "%hash_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_2)" [sha256/main.c:105]   --->   Operation 222 'writeresp' 'hash_addr_2_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 223 [5/5] (8.75ns)   --->   "%hash_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_3)" [sha256/main.c:106]   --->   Operation 223 'writeresp' 'hash_addr_3_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 224 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr_4, i8 %trunc_ln107, i1 true)" [sha256/main.c:107]   --->   Operation 224 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 225 [1/1] (8.75ns)   --->   "%hash_addr_5_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr_5, i32 1)" [sha256/main.c:108]   --->   Operation 225 'writereq' 'hash_addr_5_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 226 [1/1] (4.42ns)   --->   "%lshr_ln109 = lshr i32 %ctx_state_6_ret, %zext_ln103" [sha256/main.c:109]   --->   Operation 226 'lshr' 'lshr_ln109' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 227 [1/1] (0.00ns)   --->   "%trunc_ln109 = trunc i32 %lshr_ln109 to i8" [sha256/main.c:109]   --->   Operation 227 'trunc' 'trunc_ln109' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 18 <SV = 16> <Delay = 8.75>
ST_18 : Operation 228 [1/5] (8.75ns)   --->   "%hash_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr)" [sha256/main.c:103]   --->   Operation 228 'writeresp' 'hash_addr_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 229 [2/5] (8.75ns)   --->   "%hash_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_1)" [sha256/main.c:104]   --->   Operation 229 'writeresp' 'hash_addr_1_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 230 [3/5] (8.75ns)   --->   "%hash_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_2)" [sha256/main.c:105]   --->   Operation 230 'writeresp' 'hash_addr_2_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 231 [4/5] (8.75ns)   --->   "%hash_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_3)" [sha256/main.c:106]   --->   Operation 231 'writeresp' 'hash_addr_3_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 232 [5/5] (8.75ns)   --->   "%hash_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_4)" [sha256/main.c:107]   --->   Operation 232 'writeresp' 'hash_addr_4_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 233 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr_5, i8 %trunc_ln108, i1 true)" [sha256/main.c:108]   --->   Operation 233 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 234 [1/1] (8.75ns)   --->   "%hash_addr_6_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr_6, i32 1)" [sha256/main.c:109]   --->   Operation 234 'writereq' 'hash_addr_6_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 235 [1/1] (4.42ns)   --->   "%lshr_ln110 = lshr i32 %ctx_state_7_ret, %zext_ln103" [sha256/main.c:110]   --->   Operation 235 'lshr' 'lshr_ln110' <Predicate = (!icmp_ln101)> <Delay = 4.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 4.42> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln110 = trunc i32 %lshr_ln110 to i8" [sha256/main.c:110]   --->   Operation 236 'trunc' 'trunc_ln110' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 19 <SV = 17> <Delay = 8.75>
ST_19 : Operation 237 [1/5] (8.75ns)   --->   "%hash_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_1)" [sha256/main.c:104]   --->   Operation 237 'writeresp' 'hash_addr_1_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 238 [2/5] (8.75ns)   --->   "%hash_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_2)" [sha256/main.c:105]   --->   Operation 238 'writeresp' 'hash_addr_2_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 239 [3/5] (8.75ns)   --->   "%hash_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_3)" [sha256/main.c:106]   --->   Operation 239 'writeresp' 'hash_addr_3_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 240 [4/5] (8.75ns)   --->   "%hash_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_4)" [sha256/main.c:107]   --->   Operation 240 'writeresp' 'hash_addr_4_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 241 [5/5] (8.75ns)   --->   "%hash_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_5)" [sha256/main.c:108]   --->   Operation 241 'writeresp' 'hash_addr_5_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 242 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr_6, i8 %trunc_ln109, i1 true)" [sha256/main.c:109]   --->   Operation 242 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 243 [1/1] (8.75ns)   --->   "%hash_addr_7_req = call i1 @_ssdm_op_WriteReq.m_axi.i8P(i8* %hash_addr_7, i32 1)" [sha256/main.c:110]   --->   Operation 243 'writereq' 'hash_addr_7_req' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 18> <Delay = 8.75>
ST_20 : Operation 244 [1/5] (8.75ns)   --->   "%hash_addr_2_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_2)" [sha256/main.c:105]   --->   Operation 244 'writeresp' 'hash_addr_2_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 245 [2/5] (8.75ns)   --->   "%hash_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_3)" [sha256/main.c:106]   --->   Operation 245 'writeresp' 'hash_addr_3_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 246 [3/5] (8.75ns)   --->   "%hash_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_4)" [sha256/main.c:107]   --->   Operation 246 'writeresp' 'hash_addr_4_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 247 [4/5] (8.75ns)   --->   "%hash_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_5)" [sha256/main.c:108]   --->   Operation 247 'writeresp' 'hash_addr_5_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 248 [5/5] (8.75ns)   --->   "%hash_addr_6_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_6)" [sha256/main.c:109]   --->   Operation 248 'writeresp' 'hash_addr_6_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 249 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.i8P(i8* %hash_addr_7, i8 %trunc_ln110, i1 true)" [sha256/main.c:110]   --->   Operation 249 'write' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 21 <SV = 19> <Delay = 8.75>
ST_21 : Operation 250 [1/5] (8.75ns)   --->   "%hash_addr_3_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_3)" [sha256/main.c:106]   --->   Operation 250 'writeresp' 'hash_addr_3_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 251 [2/5] (8.75ns)   --->   "%hash_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_4)" [sha256/main.c:107]   --->   Operation 251 'writeresp' 'hash_addr_4_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 252 [3/5] (8.75ns)   --->   "%hash_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_5)" [sha256/main.c:108]   --->   Operation 252 'writeresp' 'hash_addr_5_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 253 [4/5] (8.75ns)   --->   "%hash_addr_6_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_6)" [sha256/main.c:109]   --->   Operation 253 'writeresp' 'hash_addr_6_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 254 [5/5] (8.75ns)   --->   "%hash_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_7)" [sha256/main.c:110]   --->   Operation 254 'writeresp' 'hash_addr_7_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 20> <Delay = 8.75>
ST_22 : Operation 255 [1/5] (8.75ns)   --->   "%hash_addr_4_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_4)" [sha256/main.c:107]   --->   Operation 255 'writeresp' 'hash_addr_4_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 256 [2/5] (8.75ns)   --->   "%hash_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_5)" [sha256/main.c:108]   --->   Operation 256 'writeresp' 'hash_addr_5_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 257 [3/5] (8.75ns)   --->   "%hash_addr_6_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_6)" [sha256/main.c:109]   --->   Operation 257 'writeresp' 'hash_addr_6_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_22 : Operation 258 [4/5] (8.75ns)   --->   "%hash_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_7)" [sha256/main.c:110]   --->   Operation 258 'writeresp' 'hash_addr_7_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 23 <SV = 21> <Delay = 8.75>
ST_23 : Operation 259 [1/5] (8.75ns)   --->   "%hash_addr_5_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_5)" [sha256/main.c:108]   --->   Operation 259 'writeresp' 'hash_addr_5_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 260 [2/5] (8.75ns)   --->   "%hash_addr_6_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_6)" [sha256/main.c:109]   --->   Operation 260 'writeresp' 'hash_addr_6_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_23 : Operation 261 [3/5] (8.75ns)   --->   "%hash_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_7)" [sha256/main.c:110]   --->   Operation 261 'writeresp' 'hash_addr_7_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 24 <SV = 22> <Delay = 8.75>
ST_24 : Operation 262 [1/5] (8.75ns)   --->   "%hash_addr_6_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_6)" [sha256/main.c:109]   --->   Operation 262 'writeresp' 'hash_addr_6_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_24 : Operation 263 [2/5] (8.75ns)   --->   "%hash_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_7)" [sha256/main.c:110]   --->   Operation 263 'writeresp' 'hash_addr_7_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 25 <SV = 23> <Delay = 8.75>
ST_25 : Operation 264 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str)" [sha256/main.c:101]   --->   Operation 264 'specregionbegin' 'tmp' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_25 : Operation 265 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [sha256/main.c:102]   --->   Operation 265 'specpipeline' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_25 : Operation 266 [1/5] (8.75ns)   --->   "%hash_addr_7_resp = call i1 @_ssdm_op_WriteResp.m_axi.i8P(i8* %hash_addr_7)" [sha256/main.c:110]   --->   Operation 266 'writeresp' 'hash_addr_7_resp' <Predicate = (!icmp_ln101)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_25 : Operation 267 [1/1] (0.00ns)   --->   "%empty_19 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str, i32 %tmp)" [sha256/main.c:111]   --->   Operation 267 'specregionend' 'empty_19' <Predicate = (!icmp_ln101)> <Delay = 0.00>
ST_25 : Operation 268 [1/1] (0.00ns)   --->   "br label %4" [sha256/main.c:101]   --->   Operation 268 'br' <Predicate = (!icmp_ln101)> <Delay = 0.00>

State 26 <SV = 10> <Delay = 0.00>
ST_26 : Operation 269 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 269 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 3.44ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln76', sha256/main.c:76) [27]  (2.47 ns)
	blocking operation 0.965 ns on control path)

 <State 2>: 5.97ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('ctx.datalen', sha256/main.c:73) ('i', sha256/main.c:82) [35]  (0 ns)
	'add' operation ('i', sha256/main.c:82) [36]  (2.55 ns)
	'icmp' operation ('icmp_ln83', sha256/main.c:83) [38]  (2.46 ns)
	blocking operation 0.965 ns on control path)

 <State 3>: 3.52ns
The critical path consists of the following:
	'shl' operation ('shl_ln89', sha256/main.c:89) [79]  (0 ns)
	'add' operation ('add_ln89', sha256/main.c:89) [97]  (3.52 ns)

 <State 4>: 4.87ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('ctx.datalen', sha256/main.c:73) ('i', sha256/main.c:77) [59]  (0 ns)
	'add' operation ('i', sha256/main.c:77) [60]  (2.55 ns)
	'getelementptr' operation ('ctx_data_addr_1', sha256/main.c:79) [65]  (0 ns)
	'store' operation ('store_ln79', sha256/main.c:79) of constant 0 on array 'ctx_data' [66]  (2.32 ns)

 <State 5>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_data_addr_3', sha256/main.c:90) [105]  (0 ns)
	'store' operation ('store_ln90', sha256/main.c:90) of variable 'add_ln90', sha256/main.c:90 on array 'ctx_data' [106]  (2.32 ns)

 <State 6>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_data_addr_5', sha256/main.c:92) [111]  (0 ns)
	'store' operation ('store_ln92', sha256/main.c:92) of variable 'trunc_ln2', sha256/main.c:92 on array 'ctx_data' [112]  (2.32 ns)

 <State 7>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_data_addr_7', sha256/main.c:94) [117]  (0 ns)
	'store' operation ('store_ln94', sha256/main.c:94) of variable 'trunc_ln4', sha256/main.c:94 on array 'ctx_data' [118]  (2.32 ns)

 <State 8>: 2.32ns
The critical path consists of the following:
	'getelementptr' operation ('ctx_data_addr_9', sha256/main.c:96) [123]  (0 ns)
	'store' operation ('store_ln96', sha256/main.c:96) of variable 'trunc_ln6', sha256/main.c:96 on array 'ctx_data' [124]  (2.32 ns)

 <State 9>: 1.77ns
The critical path consists of the following:
	'call' operation ('call_ret', sha256/main.c:99) to 'sha256_transform' [128]  (1.77 ns)

 <State 10>: 2.55ns
The critical path consists of the following:
	'call' operation ('call_ret', sha256/main.c:99) to 'sha256_transform' [128]  (2.55 ns)

 <State 11>: 6.2ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', sha256/main.c:101) [140]  (0 ns)
	'sub' operation ('sub_ln103', sha256/main.c:103) [151]  (1.78 ns)
	'lshr' operation ('lshr_ln103', sha256/main.c:103) [153]  (4.42 ns)

 <State 12>: 8.75ns
The critical path consists of the following:
	bus request on port 'hash' (sha256/main.c:103) [159]  (8.75 ns)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus write on port 'hash' (sha256/main.c:103) [160]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:103) [161]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:103) [161]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:103) [161]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:103) [161]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:103) [161]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:104) [171]  (8.75 ns)

 <State 20>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:105) [181]  (8.75 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:106) [191]  (8.75 ns)

 <State 22>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:107) [201]  (8.75 ns)

 <State 23>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:108) [211]  (8.75 ns)

 <State 24>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:109) [221]  (8.75 ns)

 <State 25>: 8.75ns
The critical path consists of the following:
	bus access on port 'hash' (sha256/main.c:110) [231]  (8.75 ns)

 <State 26>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
